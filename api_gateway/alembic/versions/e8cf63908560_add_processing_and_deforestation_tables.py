"""add processing and deforestation tables

Revision ID: e8cf63908560
Revises: 0db43b4e5991
Create Date: 2025-02-15 09:07:35.501938

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e8cf63908560'
down_revision: Union[str, None] = '0db43b4e5991'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create processing_batches table
    op.create_table('processing_batches',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('area_of_interest', geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326), nullable=False),
        sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('status', sa.String(), nullable=True, server_default='pending'),
        sa.Column('processed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('error_message', sa.String(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('place_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processing_batches_id'), 'processing_batches', ['id'], unique=False)
    op.create_index('idx_processing_batches_area', 'processing_batches', ['area_of_interest'], postgresql_using='gist')

    # Create deforestation_events table
    op.create_table('deforestation_events',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('affected_area', geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326), nullable=False),
        sa.Column('detected_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('confidence_score', sa.Float(), nullable=False),
        sa.Column('area_hectares', sa.Float(), nullable=False),
        sa.Column('batch_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['batch_id'], ['processing_batches.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deforestation_events_id'), 'deforestation_events', ['id'], unique=False)
    op.create_index('idx_deforestation_events_area', 'deforestation_events', ['affected_area'], postgresql_using='gist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_deforestation_events_area', table_name='deforestation_events', postgresql_using='gist')
    op.drop_index(op.f('ix_deforestation_events_id'), table_name='deforestation_events')
    op.drop_table('deforestation_events')
    op.drop_index('idx_processing_batches_area', table_name='processing_batches', postgresql_using='gist')
    op.drop_index(op.f('ix_processing_batches_id'), table_name='processing_batches')
    op.drop_table('processing_batches')
    # ### end Alembic commands ###
